#_                   _ _ _  _ _____ _  _
#| | _______   ____ _| | | || |___  | || |
#| |/ / _ \ \ / / _` | | | || |_ / /| || |_
#|   <  __/\ V / (_| | | |__   _/ / |__   _|
#|_|\_\___| \_/ \__,_|_|_|  |_|/_/     |_|

#Maintainer: kevall474 <kevall474@tuta.io> <https://github.com/kevall474>
#Credits: Jan Alexander Steffens (heftig) <heftig@archlinux.org> ---> For the base PKGBUILD
#Credits: Andreas Radke <andyrtr@archlinux.org> ---> For the base PKGBUILD
#Credits: Linus Torvalds ---> For the linux kernel
#Credits: Joan Figueras <ffigue at gmail dot com> ---> For the base PKFBUILD
#Credits: Piotr Gorski <lucjan.lucjanov@gmail.com> <https://github.com/sirlucjan/kernel-patches> ---> For the patches and the base pkgbuild
#Credits: Tk-Glitch <https://github.com/Tk-Glitch> ---> For some patches. base PKGBUILD and prepare script
#Credits: Con Kolivas <kernel@kolivas.org> <http://ck.kolivas.org/> ---> For MuQSS patches
#Credits: Hamad Al Marri <https://github.com/hamadmarri/cachy-sched> ---> For CacULE CPU Scheduler patch
#Credits: Alfred Chen <https://gitlab.com/alfredchen/projectc> ---> For the BMQ/PDS CPU Scheduler patch

################# CPU Scheduler #################

#Set CPU Scheduler
#Set '1' for CacULE CPU Scheduler
#Set '2' for CacULE-RDB CPU Scheduler
#Set '3' for BMQ CPU Scheduler
#Set '4' for PDS CPU Scheduler
#Set '5' for MuQSS CPUC Scheduler
#Leave empty for no CPU Scheduler
#Default is empty. It will build with no cpu scheduler. To build with cpu shceduler just use : env _cpu_sched=(1,2,3,4 or 5) makepkg -s
if [ -z ${_cpu_sched+x} ]; then
  _cpu_sched=
fi

################################# Arch ################################

ARCH=x86

################################# GCC ################################

# Grap GCC version
# Workarround with GCC 12.0.0. Pluggins don't work, so we have to grap GCC version
# and disable CONFIG_HAVE_GCC_PLUGINS/CONFIG_GCC_PLUGINS

GCC_VERSION=$(gcc -dumpversion)

################################# CC/CXX/HOSTCC/HOSTCXX ################################

#Set compiler to build the kernel
#Set '1' to build with GCC
#Set '2' to build with CLANG and LLVM
#Default is empty. It will build with GCC. To build with different compiler just use : env _compiler=(1 or 2) makepkg -s
if [ -z ${_compiler+x} ]; then
  _compiler=
fi

if [[ "$_compiler" = "1" ]]; then
  _compiler=1
  CC=gcc
  CXX=g++
  HOSTCC=gcc
  HOSTCXX=g++
elif [[ "$_compiler" = "2" ]]; then
  _compiler=2
  CC=clang
  CXX=clang++
  HOSTCC=clang
  HOSTCXX=clang++
else
  _compiler=1
  CC=gcc
  CXX=g++
  HOSTCC=gcc
  HOSTCXX=g++
fi

###################################################################################

# This section set the pkgbase based on the cpu scheduler, so user can build different package based on the cpu scheduler.
if [[ $_cpu_sched = "1" ]]; then
  if [[ "$_compiler" = "1" ]]; then
    pkgbase=linux-kernel-cacule-gcc
  elif [[ "$_compiler" = "2" ]]; then
    pkgbase=linux-kernel-cacule-clang
  fi
elif [[ $_cpu_sched = "2" ]]; then
  if [[ "$_compiler" = "1" ]]; then
    pkgbase=linux-kernel-cacule-rdb-gcc
  elif [[ "$_compiler" = "2" ]]; then
    pkgbase=linux-kernel-cacule-rdb-clang
  fi
elif [[ $_cpu_sched = "3" ]]; then
  if [[ "$_compiler" = "1" ]]; then
    pkgbase=linux-kernel-bmq-gcc
  elif [[ "$_compiler" = "2" ]]; then
    pkgbase=linux-kernel-bmq-clang
  fi
elif [[ $_cpu_sched = "4" ]]; then
  if [[ "$_compiler" = "1" ]]; then
    pkgbase=linux-kernel-pds-gcc
  elif [[ "$_compiler" = "2" ]]; then
    pkgbase=linux-kernel-pds-clang
  fi
elif [[ $_cpu_sched = "5" ]]; then
  if [[ "$_compiler" = "1" ]]; then
    pkgbase=linux-kernel-muqss-gcc
  elif [[ "$_compiler" = "2" ]]; then
    pkgbase=linux-kernel-muqss-clang
  fi
else
  if [[ "$_compiler" = "1" ]]; then
    pkgbase=linux-kernel-gcc
  elif [[ "$_compiler" = "2" ]]; then
    pkgbase=linux-kernel-clang
  fi
fi
pkgname=("$pkgbase" "$pkgbase-headers")
for _p in "${pkgname[@]}"; do
  eval "package_$_p() {
    $(declare -f "_package${_p#$pkgbase}")
    _package${_p#$pkgbase}
  }"
done
pkgver=5.13.4
major=5.13
pkgrel=1
arch=(x86_64)
url="https://www.kernel.org/"
license=(GPL-2.0)
makedepends=("bison" "flex" "valgrind" "git" "cmake" "make" "extra-cmake-modules" "libelf" "elfutils"
             "python" "python-appdirs" "python-mako" "python-evdev" "python-sphinx_rtd_theme" "python-graphviz" "python-sphinx"
             "clang" "lib32-clang" "bc" "gcc" "gcc-libs" "lib32-gcc-libs" "glibc" "lib32-glibc" "pahole" "patch" "gtk3" "llvm" "lib32-llvm"
             "llvm-libs" "lib32-llvm-libs" "lld" "kmod" "libmikmod" "lib32-libmikmod" "xmlto" "xmltoman" "graphviz" "imagemagick" "imagemagick-doc"
             "rsync" "cpio" "inetutils" "gzip" "zstd" "xz")
patchsource=https://raw.githubusercontent.com/kevall474/kernel-patches-v2/main/$major
source=("https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/linux-$pkgver.tar.xz"
        "config-$major"
        "$patchsource/acs-patches/0001-pci-Enable-overrides-for-missing-ACS-capabilities.patch"
        "$patchsource/bbr2-xanmod-patches/0001-net-tcp_bbr-broaden-app-limited-rate-sample-detectio.patch"
        "$patchsource/bbr2-xanmod-patches/0002-net-tcp_rate-consolidate-inflight-tracking-approache.patch"
        "$patchsource/bbr2-xanmod-patches/0003-net-tcp_rate-account-for-CE-marks-in-rate-sample.patch"
        "$patchsource/bbr2-xanmod-patches/0004-net-tcp_bbr-v2-shrink-delivered_mstamp-first_tx_msta.patch"
        "$patchsource/bbr2-xanmod-patches/0005-net-tcp_bbr-v2-snapshot-packets-in-flight-at-transmi.patch"
        "$patchsource/bbr2-xanmod-patches/0006-net-tcp_bbr-v2-count-packets-lost-over-TCP-rate-samp.patch"
        "$patchsource/bbr2-xanmod-patches/0007-net-tcp_bbr-v2-export-FLAG_ECE-in-rate_sample.is_ece.patch"
        "$patchsource/bbr2-xanmod-patches/0008-net-tcp_bbr-v2-introduce-ca_ops-skb_marked_lost-CC-m.patch"
        "$patchsource/bbr2-xanmod-patches/0009-net-tcp_bbr-v2-factor-out-tx.in_flight-setting-into-.patch"
        "$patchsource/bbr2-xanmod-patches/0010-net-tcp_bbr-v2-adjust-skb-tx.in_flight-upon-merge-in.patch"
        "$patchsource/bbr2-xanmod-patches/0011-net-tcp_bbr-v2-adjust-skb-tx.in_flight-upon-split-in.patch"
        "$patchsource/bbr2-xanmod-patches/0012-net-tcp_bbr-v2-set-tx.in_flight-for-skbs-in-repair-w.patch"
        "$patchsource/bbr2-xanmod-patches/0013-net-tcp-add-new-ca-opts-flag-TCP_CONG_WANTS_CE_EVENT.patch"
        "$patchsource/bbr2-xanmod-patches/0014-net-tcp-re-generalize-TSO-sizing-in-TCP-CC-module-AP.patch"
        "$patchsource/bbr2-xanmod-patches/0015-net-tcp-add-fast_ack_mode-1-skip-rwin-check-in-tcp_f.patch"
        "$patchsource/bbr2-xanmod-patches/0016-net-tcp_bbr-v2-BBRv2-bbr2-congestion-control-for-Lin.patch"
        "$patchsource/bbr2-xanmod-patches/0017-net-tcp_bbr-v2-remove-unnecessary-rs.delivered_ce-lo.patch"
        "$patchsource/bbr2-xanmod-patches/0018-net-tcp_bbr-v2-remove-field-bw_rtts-that-is-unused-i.patch"
        "$patchsource/bbr2-xanmod-patches/0019-net-tcp_bbr-v2-remove-cycle_rand-parameter-that-is-u.patch"
        "$patchsource/bbr2-xanmod-patches/0020-net-tcp_bbr-v2-don-t-assume-prior_cwnd-was-set-enter.patch"
        "$patchsource/bbr2-xanmod-patches/0021-net-tcp_bbr-v2-Fix-missing-ECT-markings-on-retransmi.patch"
        "$patchsource/block-patches/0002-XANMOD-block-bfq-change-BLK_DEV_ZONED-depends-to-IOS.patch"
        "$patchsource/block-patches/0003-XANMOD-block-set-rq_affinity-to-force-full-multithre.patch"
        "$patchsource/clearlinux-patches/0101-i8042-decrease-debug-message-level-to-info.patch"
        "$patchsource/clearlinux-patches/0102-increase-the-ext4-default-commit-age.patch"
        "$patchsource/clearlinux-patches/0103-silence-rapl.patch"
        "$patchsource/clearlinux-patches/0104-pci-pme-wakeups.patch"
        "$patchsource/clearlinux-patches/0105-ksm-wakeups.patch"
        "$patchsource/clearlinux-patches/0106-intel_idle-tweak-cpuidle-cstates.patch"
        "$patchsource/clearlinux-patches/0108-smpboot-reuse-timer-calibration.patch"
        "$patchsource/clearlinux-patches/0109-initialize-ata-before-graphics.patch"
        "$patchsource/clearlinux-patches/0110-give-rdrand-some-credit.patch"
        "$patchsource/clearlinux-patches/0111-ipv4-tcp-allow-the-memory-tuning-for-tcp-to-go-a-lit.patch"
        "$patchsource/clearlinux-patches/0112-init-wait-for-partition-and-retry-scan.patch"
        "$patchsource/clearlinux-patches/0113-print-fsync-count-for-bootchart.patch"
        "$patchsource/clearlinux-patches/0114-add-boot-option-to-allow-unsigned-modules.patch"
        "$patchsource/clearlinux-patches/0115-enable-stateless-firmware-loading.patch"
        "$patchsource/clearlinux-patches/0116-migrate-some-systemd-defaults-to-the-kernel-defaults.patch"
        "$patchsource/clearlinux-patches/0117-xattr-allow-setting-user.-attributes-on-symlinks-by-.patch"
        "$patchsource/clearlinux-patches/0118-add-scheduler-turbo3-patch.patch"
        "$patchsource/clearlinux-patches/0119-use-lfence-instead-of-rep-and-nop.patch"
        "$patchsource/clearlinux-patches/0121-locking-rwsem-spin-faster.patch"
        "$patchsource/clearlinux-patches/0122-ata-libahci-ignore-staggered-spin-up.patch"
        "$patchsource/clearlinux-patches/0123-print-CPU-that-faults.patch"
        "$patchsource/clearlinux-patches/0124-x86-microcode-Force-update-a-uCode-even-if-the-rev-i.patch"
        "$patchsource/clearlinux-patches/0125-x86-microcode-echo-2-reload-to-force-load-ucode.patch"
        "$patchsource/clearlinux-patches/0126-fix-bug-in-ucode-force-reload-revision-check.patch"
        "$patchsource/clearlinux-patches/0127-nvme-workaround.patch"
        "$patchsource/clearlinux-patches/0128-don-t-report-an-error-if-PowerClamp-run-on-other-CPU.patch"
        "$patchsource/cpu-patches/more-uarches-for-kernel-5.8+.patch"
        "$patchsource/cpu-patches/0012-XANMOD-init-Kconfig-Enable-O3-KBUILD_CFLAGS-optimiza.patch"
        "$patchsource/cpu-patches/0013-XANMOD-Makefile-Turn-off-loop-vectorization-for-GCC-.patch"
        "$patchsource/cpu-patches/0003-init-Kconfig-add-O1-flag.patch"
        "https://raw.githubusercontent.com/kevall474/kernel-patches/main/5.12/compaction-patches/0001-compaction-patches.patch"
        "$patchsource/elevator-xanmod-patches/0001-XANMOD-elevator-set-default-scheduler-to-bfq-for-blk.patch"
        "$patchsource/futex-patches/0001-futex-resync-from-gitlab.collabora.com.patch"
        "$patchsource/futex-tkg-patches/0007-v5.13-futex2_interface.patch"
        "$patchsource/intel-zen-patches/0010-ZEN-intel-pstate-Implement-enable-parameter.patch"
        "$patchsource/irq-patches/0011-ZEN-Add-an-option-to-make-threadirqs-the-default.patch"
        "$patchsource/loopback-patches/0001-v4l2loopback-patches.patch"
        "$patchsource/mm-patches/0001-mm-5.13-protect-file-mappings-under-memory-pressure.patch"
        "$patchsource/mm-patches/0004-mm-set-8-megabytes-for-address_space-level-file-read.patch"
        "$patchsource/mm-tkg-patches/0001-mm-Support-soft-dirty-flag-reset-for-VA-range.patch"
        "$patchsource/mm-tkg-patches/0002-mm-Support-soft-dirty-flag-read-with-reset.patch"
        "$patchsource/mm-xanmod-patches/0008-XANMOD-mm-vmscan-vm_swappiness-30-decreases-the-amou.patch"
        "$patchsource/mm-zen-patches/0013-ZEN-mm-Disable-watermark-boosting-by-default.patch"
        "$patchsource/mm-zen-patches/0014-ZEN-mm-Stop-kswapd-early-when-nothing-s-waiting-for-.patch"
        "$patchsource/mm-zen-patches/0015-ZEN-mm-Don-t-stop-kswapd-on-a-per-node-basis-when-th.patch"
        "$patchsource/mq-deadline-patches/0009-ZEN-Add-CONFIG-to-rename-the-mq-deadline-scheduler-v3.patch"
        "$patchsource/ntfs3-xanmod-patches/ntfs3-xanmod-patches.patch"
        "$patchsource/openrgb-zen-patches/0003-ZEN-Add-OpenRGB-patches.patch"
        "$patchsource/security/security-xanmod-patches.patch"
        "$patchsource/timer-xanmod-patches/0004-XANMOD-kconfig-add-500Hz-timer-interrupt-kernel-conf.patch"
        "$patchsource/wine-patches/0007-v5.13-winesync.patch"
        "$patchsource/xanmod-patches/0005-XANMOD-kconfig-set-PREEMPT-and-RCU_BOOST-without-del.patch"
        "$patchsource/xanmod-patches/0006-XANMOD-dcache-cache_pressure-50-decreases-the-rate-a.patch"
        "$patchsource/xanmod-patches/0007-XANMOD-sched-autogroup-Add-kernel-parameter-and-conf.patch"
        "$patchsource/xanmod-patches/0009-XANMOD-cpufreq-tunes-ondemand-and-conservative-gover.patch"
        "$patchsource/xanmod-patches/0011-XANMOD-lib-kconfig.debug-disable-default-CONFIG_SYMB.patch"
        "$patchsource/zen-patches/0002-ZEN-Add-VHBA-driver.patch"
        "$patchsource/zen-patches/0006-ZEN-Disable-stack-conservation-for-GCC.patch"
        "$patchsource/zen-patches/0008-ZEN-Add-sysctl-and-CONFIG-to-disallow-unprivileged-C.patch"
        "$patchsource/zstd-patches/0001-kbuild-allow-setting-zstd-compression-level-for-modu.patch"
        "$patchsource/zstd-patches/0002-kbuild-allow-setting-zstd-compression-level-for-kern.patch"
        "$patchsource/zstd-patches/0003-kbuild-optimize-zstd-compression-settings.patch"
        "$patchsource/zstd-patches/0004-kbuild-allow-setting-ultra-zstd-compression-level-fo.patch"
        "$patchsource/zstd-patches/0005-kbuild-add-proper-bool-for-MODULE_COMPRESS_ZSTD_ULTR.patch"
        "$patchsource/zstd-patches/0006-kbuild-add-proper-help-for-MODULE_COMPRESS_ZSTD_LEVE.patch"
        "$patchsource/zstd-xanmod-patches/0001-lib-zstd-Add-kernel-specific-API.patch"
        "$patchsource/zstd-xanmod-patches/0002-lib-zstd-Add-decompress_sources.h-for-decompress_unz.patch"
        "$patchsource/zstd-xanmod-patches/0003-lib-zstd-Upgrade-to-latest-upstream-zstd-version-1.4.patch"
        "$patchsource/zstd-xanmod-patches/0004-MAINTAINERS-Add-maintainer-entry-for-zstd.patch"
        "$patchsource/misc-patches/0003-sched-core-nr_migrate-256-increases-number-of-tasks-.patch"
        "$patchsource/misc-patches/0005-Disable-CPU_FREQ_GOV_SCHEDUTIL.patch"
        "$patchsource/misc-patches/vm.max_map_count.patch")
md5sums=("SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP"
         "SKIP")

# 0014-XANMOD-fair-Remove-all-energy-efficiency-functions-v.patch workarround with CacULE
if [[ $_cpu_sched != "1" ]] && [[ $_cpu_sched != "2" ]]; then
  source+=("$patchsource/xanmod-patches/0014-XANMOD-fair-Remove-all-energy-efficiency-functions-v.patch")
  md5sums+=("SKIP")
fi

# zen_interactive workarround with CacULE
if [[ $_cpu_sched != "1" ]] && [[ $_cpu_sched != "2" ]]; then
  source+=("$patchsource/zen-interactive-patches/ZEN_INTERACTIVE.patch"
           "$patchsource/zen-interactive-patches/0027-ZEN-Restore-dirty-background-ratios-to-mainline-defa.patch")
  md5sums+=("SKIP"
            "SKIP")
fi

# CacULE patch
if [[ $_cpu_sched = "1" ]] || [[ $_cpu_sched = "2" ]]; then
  source+=("${patchsource}/cacule-patches/cacule-$major.patch")
  md5sums+=("SKIP")
fi

# prjc patch
if [[ $_cpu_sched = "3" ]] || [[ $_cpu_sched = "4" ]]; then
  source+=("${patchsource}/prjc-patches/prjc_v$major-r1.patch")
  md5sums+=("SKIP")
fi

# MuQSS patch. 0001-MultiQueue-Skiplist-Scheduler-v0.210.patch with 5.13 kernel.
# The patch is forced because there is no release from Con Kolivas for 5.13 kernel. Bugs in the kernel may occur.
if [[ $_cpu_sched = "5" ]]; then
  source+=("${patchsource}/muqss-kevall474-patches/0001-MultiQueue-Skiplist-Scheduler-v0.210.patch")
  md5sums+=("SKIP")
fi

# rdb patch
if [[ $_cpu_sched = "2" ]]; then
  source+=("${patchsource}/cacule-patches/rdb-$major.patch")
  md5sums+=("SKIP")  #rdb-5.13.patch
fi

export KBUILD_BUILD_HOST=archlinux
export KBUILD_BUILD_USER=$pkgbase
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

prepare(){

  cd linux-$pkgver

  # Apply any patch
  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    msg2 "Applying patch $src..."
    patch -Np1 < "../$src"
  done

  # Apply MuQSS patch
  #if [[ $_cpu_sched = "5" ]]; then
    #msg2 "Applying patch patch-$major-ck1"
    #patch -Np1 < ../patch-$major-ck1
  #fi

  # Copy the config file first
  # Copy "${srcdir}"/config-$major to "${srcdir}"/linux-${pkgver}/.config
  msg2 "Copy "${srcdir}"/config-$major to "${srcdir}"/linux-$pkgver/.config"
  cp "${srcdir}"/config-$major .config

  plain ""
  msg2 "Disable LTO"
  scripts/config --disable CONFIG_LTO
  scripts/config --disable CONFIG_LTO_CLANG
  scripts/config --disable CONFIG_ARCH_SUPPORTS_LTO_CLANG
  scripts/config --disable CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN
  scripts/config --disable CONFIG_HAS_LTO_CLANG
  scripts/config --disable CONFIG_LTO_NONE
  scripts/config --disable CONFIG_LTO_CLANG_FULL
  scripts/config --disable CONFIG_LTO_CLANG_THIN

  sleep 2s

  # fix for GCC 12.0.0 (git version)
  # plugins don't work
  # disable plugins
  #if [[ "$GCC_VERSION" = "12.0.0" ]] && [[ "$_compiler" = "1" ]]; then
  #  plain ""
  #  msg2 "Disable CONFIG_HAVE_GCC_PLUGINS/CONFIG_GCC_PLUGINS (Quick fix for gcc 12.0.0 git version)"
  #  scripts/config --disable CONFIG_HAVE_GCC_PLUGINS
  #  scripts/config --disable CONFIG_GCC_PLUGINS
  #  plain ""
  #  sleep 2s
  #fi

  # Customize the kernel
  source "${startdir}"/prepare

  configure

  cpu_arch

  # Automation building with rapid_config
  # Uncomment rapid_config and comment out configure and cpu_arch
  # rapid_config is meant to work with build.sh for automation building
  #rapid_config

  # Setting localversion
  msg2 "Setting localversion..."
  scripts/setlocalversion --save-scmversion
  echo "-${pkgbase}" > localversion

  # Config
  if [[ "$_compiler" = "1" ]]; then
    make ARCH=${ARCH} CC=${CC} CXX=${CXX} HOSTCC=${HOSTCC} HOSTCXX=${HOSTCXX} olddefconfig
  elif [[ "$_compiler" = "2" ]]; then
    make ARCH=${ARCH} CC=${CC} CXX=${CXX} LLVM=1 LLVM_IAS=1 HOSTCC=${HOSTCC} HOSTCXX=${HOSTCXX} olddefconfig
  fi

  make -s kernelrelease > version
  msg2 "Prepared $pkgbase version $(<version)"
}

build(){

  cd "${srcdir}"/linux-$pkgver

  # make -j$(nproc) all
  msg2 "make -j$(nproc) all..."
  if [[ "$_compiler" = "1" ]]; then
    make ARCH=${ARCH} CC=${CC} CXX=${CXX} HOSTCC=${HOSTCC} HOSTCXX=${HOSTCXX} -j$(nproc) all
  elif [[ "$_compiler" = "2" ]]; then
    make ARCH=${ARCH} CC=${CC} CXX=${CXX} LLVM=1 LLVM_IAS=1 HOSTCC=${HOSTCC} HOSTCXX=${HOSTCXX} -j$(nproc) all
  fi
}

_package(){
  pkgdesc="Latest stable linux kernel and modules"
  depends=("coreutils" "kmod" "initramfs" "mkinitcpio")
  optdepends=("linux-firmware: firmware images needed for some devices"
              "crda: to set the correct wireless channels of your country"
              "winesync-headers: headers file for winesync module")
  provides=("VIRTUALBOX-GUEST-MODULES" "WIREGUARD-MODULE")

  cd "${srcdir}"/linux-$pkgver

  local kernver="$(<version)"
  local modulesdir="${pkgdir}"/usr/lib/modules/${kernver}

  msg2 "Installing boot image..."
  # systemd expects to find the kernel here to allow hibernation
  # https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
  #install -Dm644 arch/${ARCH}/boot/bzImage "$modulesdir/vmlinuz"
  msg2 "install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz""
  install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"

  # Used by mkinitcpio to name the kernel
  msg2 "echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase""
  echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

  msg2 "Installing modules..."
  if [[ "$_compiler" = "1" ]]; then
    make ARCH=${ARCH} CC=${CC} CXX=${CXX} HOSTCC=${HOSTCC} HOSTCXX=${HOSTCXX} INSTALL_MOD_PATH="${pkgdir}"/usr INSTALL_MOD_STRIP=1 -j$(nproc) modules_install
  elif [[ "$_compiler" = "2" ]]; then
    make ARCH=${ARCH} CC=${CC} CXX=${CXX} LLVM=1 LLVM_IAS=1 HOSTCC=${HOSTCC} HOSTCXX=${HOSTCXX} INSTALL_MOD_PATH="${pkgdir}"/usr INSTALL_MOD_STRIP=1 -j$(nproc) modules_install
  fi

  # remove build and source links
  msg2 "Remove build dir and source dir..."
  rm -rf "$modulesdir"/{source,build}
}

_package-headers(){
  pkgdesc="Headers and scripts for building modules for the $pkgbase package"
  depends=("${pkgbase}" "pahole")

  cd "${srcdir}"/linux-$pkgver

  local builddir="$pkgdir"/usr/lib/modules/"$(<version)"/build

  msg2 "Installing build files..."
  install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map localversion version vmlinux
  install -Dt "$builddir/kernel" -m644 kernel/Makefile
  install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
  cp -t "$builddir" -a scripts

  # add objtool for external module building and enabled VALIDATION_STACK option
  install -Dt "$builddir/tools/objtool" tools/objtool/objtool

  # add xfs and shmem for aufs building
  mkdir -p "$builddir"/{fs/xfs,mm}

  msg2 "Installing headers..."
  cp -t "$builddir" -a include
  cp -t "$builddir/arch/x86" -a arch/x86/include
  install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

  install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
  install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

  # https://bugs.archlinux.org/task/13146
  install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

  # https://bugs.archlinux.org/task/20402
  install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
  install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
  install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

  # https://bugs.archlinux.org/task/71392
  install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

  msg2 "Installing KConfig files..."
  find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

  msg2 "Removing unneeded architectures..."
  local arch
  for arch in "$builddir"/arch/*/; do
    [[ $arch = */x86/ ]] && continue
    msg2 "Removing $(basename "$arch")"
    rm -r "$arch"
  done

  msg2 "Removing documentation..."
  rm -r "$builddir/Documentation"

  msg2 "Removing broken symlinks..."
  find -L "$builddir" -type l -printf 'Removing %P\n' -delete

  msg2 "Removing loose objects..."
  find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

  msg2 "Stripping build tools..."
  local file
  while read -rd '' file; do
    case "$(file -bi "$file")" in
      application/x-sharedlib\;*)      # Libraries (.so)
        strip -v $STRIP_SHARED "$file" ;;
      application/x-archive\;*)        # Libraries (.a)
        strip -v $STRIP_STATIC "$file" ;;
      application/x-executable\;*)     # Binaries
        strip -v $STRIP_BINARIES "$file" ;;
      application/x-pie-executable\;*) # Relocatable binaries
        strip -v $STRIP_SHARED "$file" ;;
    esac
  done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

  msg2 "Stripping vmlinux..."
  strip -v $STRIP_STATIC "$builddir/vmlinux"

  msg2 "Adding symlink..."
  mkdir -p "$pkgdir/usr/src"
  ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"
}
